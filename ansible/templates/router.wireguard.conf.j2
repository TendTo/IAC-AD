# {{ ansible_managed }}
[Interface]
Address = {{ wireguard.router.ip }}/{{ wireguard.network | regex_replace('[^/]+/(\d+)', '\\1') }}
ListenPort = {{ wireguard.router.port }}

# Load private key from file
PostUp = wg set %i private-key /etc/wireguard/privatekey

# Set forward policy to DROP
PostUp = iptables -P FORWARD DROP
# Make sure we accept incoming connections on the wireguard port
PostUp = iptables -I INPUT -m state --state NEW -p udp --dport {{ wireguard.router.port }} -j ACCEPT
# Masquerade outgoing connections directed to other vpn clients
PostUp = iptables -t nat -I POSTROUTING -o %i -d {{ wireguard.vulnbox.subnet }} -j SNAT --to {{ wireguard.router.ip }}

# Create new chain to handle forwarding
PostUp = iptables -N wireguard_%i
PostUp = iptables -A FORWARD -j wireguard_%i

PostUp = iptables -A wireguard_%i -o %i -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

# For each player, allow them to connect only to their machine
{% for team in teams %}
PostUp = iptables -A wireguard_%i -s {{ wireguard.vulnbox.ip_format | format(loop.index) }}/{{ (wireguard.vulnbox.subnet | regex_replace('[^/]+/(\d+)', '\\1') | int) + wireguard.vulnbox.team_mask_offset }} -i %i -d {{ wireguard.player.ip_format | format(loop.index, 0) }}/{{ (wireguard.player.subnet | regex_replace('[^/]+/(\d+)', '\\1') | int) + wireguard.player.team_mask_offset }} -j ACCEPT
PostUp = iptables -A wireguard_%i -s {{ wireguard.player.ip_format | format(loop.index, 0) }}/{{ (wireguard.player.subnet | regex_replace('[^/]+/(\d+)', '\\1') | int) + wireguard.player.team_mask_offset }} -i %i -d {{ wireguard.vulnbox.ip_format | format(loop.index) }}/{{ (wireguard.vulnbox.subnet | regex_replace('[^/]+/(\d+)', '\\1') | int) + wireguard.vulnbox.team_mask_offset }} -j ACCEPT
{% endfor %}

#TODO: Add rules players/vulnbox -> server and vice versa (?)

PostUp = iptables -A wireguard_%i -i %i -j DROP
PostUp = iptables -A wireguard_%i -j RETURN

# Remove all rules from the chain and the custom chain itself when wg-quick goes down
PostDown = iptables -D INPUT -m state --state NEW -p udp --dport {{ wireguard.router.port }} -j ACCEPT
PostDown = iptables -t nat -D POSTROUTING -o %i -d {{ wireguard.vulnbox.subnet }} -j SNAT --to {{ wireguard.router.ip }}
PostDown = iptables -D FORWARD -j wireguard_%i
PostDown = iptables -F wireguard_%i
PostDown = iptables -X wireguard_%i
PostDown = iptables -P FORWARD ACCEPT

# Players
{% for peer in player_configs %}
[Peer]
PublicKey = {{ peer.pk }}
AllowedIPs = {{ peer.ip }}/32

{% endfor %}

# Vulnboxes
{% for peer in vulnboxes %}
[Peer]
PublicKey = {{ peer.vulnbox_pk.content | b64decode }}
AllowedIPs = {{ peer.ip }}/32

{% endfor %}

# Server
[Peer]
PublicKey = {{ server.server_pk.content | b64decode }}
AllowedIPs = {{ wireguard.server.ip }}/32
